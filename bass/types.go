// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Sat, 11 Jun 2022 23:23:46 CEST.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package bass

/*
#include "../include/bass.h"
#include "../include/bassenc.h"
#include "../include/bassenc_mp3.h"
#include "../include/bassenc_flac.h"
#include "../include/bassenc_ogg.h"
#include "../include/bassmix.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import "unsafe"

// BassDeviceinfo as declared in include/bass.h:212
type BassDeviceinfo struct {
	Name           string
	Driver         string
	Flags          uint32
	reff9f2a250    *C.BASS_DEVICEINFO
	allocsf9f2a250 interface{}
}

// BassInfo as declared in include/bass.h:252
type BassInfo struct {
	Flags         uint32
	Hwsize        uint32
	Hwfree        uint32
	Freesam       uint32
	Free3d        uint32
	Minrate       uint32
	Maxrate       uint32
	Eax           int32
	Minbuf        uint32
	Dsver         uint32
	Latency       uint32
	Initflags     uint32
	Speakers      uint32
	Freq          uint32
	refd662fca    *C.BASS_INFO
	allocsd662fca interface{}
}

// BassRecordinfo as declared in include/bass.h:267
type BassRecordinfo struct {
	Flags          uint32
	Formats        uint32
	Inputs         uint32
	Singlein       int32
	Freq           uint32
	ref7123a104    *C.BASS_RECORDINFO
	allocs7123a104 interface{}
}

// BassSample as declared in include/bass.h:308
type BassSample struct {
	Freq           uint32
	Volume         float32
	Pan            float32
	Flags          uint32
	Length         uint32
	Max            uint32
	Origres        uint32
	Chans          uint32
	Mingap         uint32
	Mode3d         uint32
	Mindist        float32
	Maxdist        float32
	Iangle         uint32
	Oangle         uint32
	Outvol         float32
	Vam            uint32
	Priority       uint32
	ref61017d72    *C.BASS_SAMPLE
	allocs61017d72 interface{}
}

// BassChannelinfo as declared in include/bass.h:397
type BassChannelinfo struct {
	Freq           uint32
	Chans          uint32
	Flags          uint32
	Ctype          uint32
	Origres        uint32
	Plugin         uint32
	Sample         uint32
	Filename       string
	refaa6394b0    *C.BASS_CHANNELINFO
	allocsaa6394b0 interface{}
}

// BassPluginform as declared in include/bass.h:436
type BassPluginform struct {
	Ctype          uint32
	Name           string
	Exts           string
	refeaee9748    *C.BASS_PLUGINFORM
	allocseaee9748 interface{}
}

// BassPlugininfo as declared in include/bass.h:442
type BassPlugininfo struct {
	Version        uint32
	Formatc        uint32
	Formats        []BassPluginform
	ref73ef5b50    *C.BASS_PLUGININFO
	allocs73ef5b50 interface{}
}

// Bass3dvector as declared in include/bass.h:453
type Bass3dvector struct {
	X              float32
	Y              float32
	Z              float32
	ref86a5babe    *C.BASS_3DVECTOR
	allocs86a5babe interface{}
}

// Streamproc type as declared in include/bass.h:470
type Streamproc func(handle uint32, buffer unsafe.Pointer, length uint32, user unsafe.Pointer) uint32

// Filecloseproc type as declared in include/bass.h:492
type Filecloseproc func(user unsafe.Pointer)

// Filelenproc type as declared in include/bass.h:493
type Filelenproc func(user unsafe.Pointer) uint32

// Filereadproc type as declared in include/bass.h:494
type Filereadproc func(buffer unsafe.Pointer, length uint32, user unsafe.Pointer) uint32

// Fileseekproc type as declared in include/bass.h:495
type Fileseekproc func(offset uint32, user unsafe.Pointer) int32

// BassFileprocs as declared in include/bass.h:502
type BassFileprocs struct {
	Close          *Filecloseproc
	Length         *Filelenproc
	Read           *Filereadproc
	Seek           *Fileseekproc
	refbf5215a7    *C.BASS_FILEPROCS
	allocsbf5215a7 interface{}
}

// Downloadproc type as declared in include/bass.h:521
type Downloadproc func(buffer unsafe.Pointer, length uint32, user unsafe.Pointer)

// Syncproc type as declared in include/bass.h:546
type Syncproc func(handle uint32, channel uint32, data uint32, user unsafe.Pointer)

// Dspproc type as declared in include/bass.h:553
type Dspproc func(handle uint32, channel uint32, buffer unsafe.Pointer, length uint32, user unsafe.Pointer)

// Recordproc type as declared in include/bass.h:561
type Recordproc func(handle uint32, buffer unsafe.Pointer, length uint32, user unsafe.Pointer) int32

// BassDx8Chorus as declared in include/bass.h:883
type BassDx8Chorus struct {
	Fwetdrymix     float32
	Fdepth         float32
	Ffeedback      float32
	Ffrequency     float32
	Lwaveform      uint32
	Fdelay         float32
	Lphase         uint32
	refd83bc0af    *C.BASS_DX8_CHORUS
	allocsd83bc0af interface{}
}

// BassDx8Compressor as declared in include/bass.h:892
type BassDx8Compressor struct {
	Fgain          float32
	Fattack        float32
	Frelease       float32
	Fthreshold     float32
	Fratio         float32
	Fpredelay      float32
	ref17e18f61    *C.BASS_DX8_COMPRESSOR
	allocs17e18f61 interface{}
}

// BassDx8Distortion as declared in include/bass.h:900
type BassDx8Distortion struct {
	Fgain                  float32
	Fedge                  float32
	Fposteqcenterfrequency float32
	Fposteqbandwidth       float32
	Fprelowpasscutoff      float32
	refeeb6f21f            *C.BASS_DX8_DISTORTION
	allocseeb6f21f         interface{}
}

// BassDx8Echo as declared in include/bass.h:908
type BassDx8Echo struct {
	Fwetdrymix     float32
	Ffeedback      float32
	Fleftdelay     float32
	Frightdelay    float32
	Lpandelay      int32
	ref88a525b3    *C.BASS_DX8_ECHO
	allocs88a525b3 interface{}
}

// BassDx8Flanger as declared in include/bass.h:918
type BassDx8Flanger struct {
	Fwetdrymix     float32
	Fdepth         float32
	Ffeedback      float32
	Ffrequency     float32
	Lwaveform      uint32
	Fdelay         float32
	Lphase         uint32
	ref7ebaa3d2    *C.BASS_DX8_FLANGER
	allocs7ebaa3d2 interface{}
}

// BassDx8Gargle as declared in include/bass.h:923
type BassDx8Gargle struct {
	Dwratehz       uint32
	Dwwaveshape    uint32
	ref99f01258    *C.BASS_DX8_GARGLE
	allocs99f01258 interface{}
}

// BassDx8I3dl2reverb as declared in include/bass.h:938
type BassDx8I3dl2reverb struct {
	Lroom               int32
	Lroomhf             int32
	Flroomrollofffactor float32
	Fldecaytime         float32
	Fldecayhfratio      float32
	Lreflections        int32
	Flreflectionsdelay  float32
	Lreverb             int32
	Flreverbdelay       float32
	Fldiffusion         float32
	Fldensity           float32
	Flhfreference       float32
	refb993b9dd         *C.BASS_DX8_I3DL2REVERB
	allocsb993b9dd      interface{}
}

// BassDx8Parameq as declared in include/bass.h:944
type BassDx8Parameq struct {
	Fcenter        float32
	Fbandwidth     float32
	Fgain          float32
	ref2d973090    *C.BASS_DX8_PARAMEQ
	allocs2d973090 interface{}
}

// BassDx8Reverb as declared in include/bass.h:951
type BassDx8Reverb struct {
	Fingain          float32
	Freverbmix       float32
	Freverbtime      float32
	Fhighfreqrtratio float32
	reff9a8cef5      *C.BASS_DX8_REVERB
	allocsf9a8cef5   interface{}
}

// BassFxVolumeParam as declared in include/bass.h:964
type BassFxVolumeParam struct {
	Ftarget        float32
	Fcurrent       float32
	Ftime          float32
	Lcurve         uint32
	ref7f7ccf78    *C.BASS_FX_VOLUME_PARAM
	allocs7f7ccf78 interface{}
}

// Iosnotifyproc type as declared in include/bass.h:966
type Iosnotifyproc func(status uint32)

// Hencode type as declared in include/bassenc.h:30
type Hencode uint32

// Encodeproc type as declared in include/bassenc.h:105
type Encodeproc func(handle Hencode, channel uint32, buffer unsafe.Pointer, length uint32, user unsafe.Pointer)

// Encodeprocex type as declared in include/bassenc.h:113
type Encodeprocex func(handle Hencode, channel uint32, buffer unsafe.Pointer, length uint32, offset uint32, user unsafe.Pointer)

// Encoderproc type as declared in include/bassenc.h:122
type Encoderproc func(handle Hencode, channel uint32, buffer unsafe.Pointer, length uint32, maxout uint32, user unsafe.Pointer) uint32

// Encodeclientproc type as declared in include/bassenc.h:132
type Encodeclientproc func(handle Hencode, connect int32, client string, headers *byte, user unsafe.Pointer) int32

// Encodenotifyproc type as declared in include/bassenc.h:141
type Encodenotifyproc func(handle Hencode, status uint32, user unsafe.Pointer)

// BassMixerNode as declared in include/bassmix.h:75
type BassMixerNode struct {
	Pos            uint32
	Value          float32
	ref9dd585c7    *C.BASS_MIXER_NODE
	allocs9dd585c7 interface{}
}
